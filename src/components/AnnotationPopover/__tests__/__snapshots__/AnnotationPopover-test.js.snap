// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/AnnotationPopover should correctly render a pending annotation 1`] = `
<RawIntlProvider>
  <HotkeyLayer
    configs={
      Array [
        Immutable.Record {
          "description": <FormattedMessage
            defaultMessage="Close Popover"
            id="ba.closePopover"
          />,
          "handler": [MockFunction],
          "key": "esc",
          "type": "Close",
        },
      ]
    }
    enableHelpModal={false}
    helpModalShortcut="?"
  >
    <div
      className="ba-popover ba-create-popover"
    >
      <span
        className="ba-popover-caret"
      />
      <div
        className="ba-popover-overlay"
      >
        <AnnotatorLabel
          isPending={true}
        />
        <ActionControls
          canComment={false}
          canDelete={false}
          hasComments={false}
          isPending={true}
          onCancel={[MockFunction]}
          onCommentClick={[Function]}
          onCreate={[MockFunction]}
          onDelete={[MockFunction]}
        />
      </div>
    </div>
  </HotkeyLayer>
</RawIntlProvider>
`;

exports[`components/AnnotationPopover should correctly render a popover with comments and reply textarea 1`] = `
<RawIntlProvider>
  <HotkeyLayer
    configs={
      Array [
        Immutable.Record {
          "description": <FormattedMessage
            defaultMessage="Close Popover"
            id="ba.closePopover"
          />,
          "handler": [MockFunction],
          "key": "esc",
          "type": "Close",
        },
      ]
    }
    enableHelpModal={false}
    helpModalShortcut="?"
  >
    <div
      className="ba-popover"
    >
      <span
        className="ba-popover-caret"
      />
      <div
        className="ba-popover-overlay"
      >
        <CommentList
          comments={
            Array [
              Object {
                "createdAt": "2017-09-27T10:40:41-07:00",
                "createdBy": Object {
                  "email": "princess@genovia.gov",
                  "id": "789ghi",
                  "name": "Mia Thermopolis",
                  "type": "user",
                },
                "id": "123",
                "message": "test",
                "permissions": Object {},
              },
              Object {
                "createdAt": "2017-09-27T10:40:41-07:00",
                "createdBy": Object {
                  "email": "princess@genovia.gov",
                  "id": "789ghi",
                  "name": "Mia Thermopolis",
                  "type": "user",
                },
                "id": "456",
                "message": "test",
                "permissions": Object {},
              },
            ]
          }
          onDelete={[MockFunction]}
        />
        <ActionControls
          canComment={false}
          canDelete={false}
          hasComments={true}
          isPending={false}
          onCancel={[MockFunction]}
          onCommentClick={[Function]}
          onCreate={[MockFunction]}
          onDelete={[MockFunction]}
        />
      </div>
    </div>
  </HotkeyLayer>
</RawIntlProvider>
`;

exports[`components/AnnotationPopover should correctly render a view-only popover with comments 1`] = `
<RawIntlProvider>
  <HotkeyLayer
    configs={
      Array [
        Immutable.Record {
          "description": <FormattedMessage
            defaultMessage="Close Popover"
            id="ba.closePopover"
          />,
          "handler": [MockFunction],
          "key": "esc",
          "type": "Close",
        },
      ]
    }
    enableHelpModal={false}
    helpModalShortcut="?"
  >
    <div
      className="ba-popover"
    >
      <span
        className="ba-popover-caret"
      />
      <div
        className="ba-popover-overlay"
      >
        <CommentList
          comments={
            Array [
              Object {
                "createdAt": "2017-09-27T10:40:41-07:00",
                "createdBy": Object {
                  "email": "princess@genovia.gov",
                  "id": "789ghi",
                  "name": "Mia Thermopolis",
                  "type": "user",
                },
                "id": "123",
                "message": "test",
                "permissions": Object {},
              },
              Object {
                "createdAt": "2017-09-27T10:40:41-07:00",
                "createdBy": Object {
                  "email": "princess@genovia.gov",
                  "id": "789ghi",
                  "name": "Mia Thermopolis",
                  "type": "user",
                },
                "id": "456",
                "message": "test",
                "permissions": Object {},
              },
            ]
          }
          onDelete={[MockFunction]}
        />
      </div>
    </div>
  </HotkeyLayer>
</RawIntlProvider>
`;

exports[`components/AnnotationPopover should correctly render an annotation with a annotator label and no comments 1`] = `
<RawIntlProvider>
  <HotkeyLayer
    configs={
      Array [
        Immutable.Record {
          "description": <FormattedMessage
            defaultMessage="Close Popover"
            id="ba.closePopover"
          />,
          "handler": [MockFunction],
          "key": "esc",
          "type": "Close",
        },
      ]
    }
    enableHelpModal={false}
    helpModalShortcut="?"
  >
    <div
      className="ba-popover ba-inline-popover"
    >
      <span
        className="ba-popover-caret"
      />
      <div
        className="ba-popover-overlay"
      >
        <AnnotatorLabel
          isPending={false}
          type="highlight"
        />
        <ActionControls
          canComment={false}
          canDelete={false}
          hasComments={false}
          isPending={false}
          onCancel={[MockFunction]}
          onCommentClick={[Function]}
          onCreate={[MockFunction]}
          onDelete={[MockFunction]}
          type="highlight"
        />
      </div>
    </div>
  </HotkeyLayer>
</RawIntlProvider>
`;

exports[`components/AnnotationPopover should render a view-only annotation with a annotator label and no comments 1`] = `
<RawIntlProvider>
  <HotkeyLayer
    configs={
      Array [
        Immutable.Record {
          "description": <FormattedMessage
            defaultMessage="Close Popover"
            id="ba.closePopover"
          />,
          "handler": [MockFunction],
          "key": "esc",
          "type": "Close",
        },
      ]
    }
    enableHelpModal={false}
    helpModalShortcut="?"
  >
    <div
      className="ba-popover ba-inline-popover"
    >
      <span
        className="ba-popover-caret"
      />
      <div
        className="ba-popover-overlay"
      >
        <AnnotatorLabel
          isPending={false}
          type="highlight"
        />
      </div>
    </div>
  </HotkeyLayer>
</RawIntlProvider>
`;
